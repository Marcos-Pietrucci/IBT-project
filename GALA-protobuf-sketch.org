* GALA protocol specification in protobuf
  Using *proto2* for compatibility with proto-c, consider switching to proto3
  - consider switching some fields' encoding from =sint= to =int= (better for positive values) based on statistic (cow temperature will probably be higer than 0), while environment values can remain =sint= since the temperature may vary during the year
  - consider moving all ={min, max, val}= fields inside other messages
  - consider converting =min= and =max= field to a value computed inside thingsboard, to reduce message size
  - consider merging =N7= and =N8= into a single packet, distinguished by the header
  - consider merging =N9= and =N10= into a single packet, distinguished by the header
  TODO:
  - define =Network= enumeration's size and values
     
#+begin_src protobuf
  syntax = "proto2";
#+end_src protobuf

** NodeInfos
   - battery voltage
   - firmware version
   - rolling
   These fields are present in every node (except for node N9 "Weather" and N10 "Gateway"
#+begin_src protobuf
  message NodeInfos {
    required uint16 battery_voltage = 1;
    required uint32 fw_version = 2;
    required uint8  packet_rolling_num = 3;
  }
#+end_src protobuf

** N1 specific data
   N1 nodes send data about indoor environment:
   - temperature (wet)
   - light
   - humidity
   - temperature (dry)
  
#+begin_src protobuf
  message DataN1 {
    required sint16 indoor_wb_temperature = 1;
    required uint32 indoor_light = 2;
    required uint16 indoor_humidity = 3;
    required sint16 indoor_db_temperature = 4;
  }
  
  message PayloadN1 {
    required NodeInfos int = 1;
    required DataN1 ext = 2;
  }
#+end_src protobuf

** N2 specific data
   N2 nodes send data about cows behavior:
   - bma reset counter
   - cow shock count
   - cow temperature
   - cow features
   - [cow features] [4]
   - cow begavior class
NOTE: consider moving cow temperature in a sub message
#+begin_src protobuf
  message DataN2 {
    required uint8  bma_reset_counter = 1;
    required uint8  cow_shock_conunt = 2;
    required uint8  cow_temperature_min = 3;
    required uint8  cow_temperature_max = 4;
    required uint8  cow_temperature_ave = 5;
    repeated float  cow_features_set_0_fx = 6 [packed = true]; // zero or more values
    required uint32 behaviour_classes = 7;
  }
  
  message PayloadN2 {
    required NodeInfos int = 1;
    required DataN2 ext = 2;
  }
#+end_src protobuf

** N3 specific data
   N3 nodes send data about water usage and temperature
   - drinking water usage and temperature
   - sprinkler water usage
#+begin_src protobuf
  message DataN3 {
    required uint32 drinking_water_volume_cumulated = 1;
    required sint16 drinking_water_temperature = 2;
    required uint32 sprinkler_water_volume_cumulated = 3;
    required sint16 sprinkler_water_temperature = 4;
  }

  message PayloadN3 {
    required NodeInfos int = 1;
    required DataN3 ext = 2;
  }
#+end_src protobuf

** N4 specific data
   N4 nodes send different datas regarding litter
   - conductivity
   - temperature
   - volumetric water count
#+begin_src protobuf
  message DataN4 {
    required uint16 litter_conductivity = 1;
    required sint16 litter_temperature = 2;
    required float  litter_vwc = 3;
  }

  message PayloadN4 {
    required NodeInfos int = 1;
    required DataN4 ext = 2;
  }
#+end_src protobuf

** N5 specific data
   N5 nodes are used to measure conditions of the environment inside the farm such as sound levels and gas particles concentration
   - sound levels (min, max, avg)
   - gas concentration (ammonia, hydrogen sulfide, carbon dioxide, metane)
#+begin_src protobuf
  message DataN5 {
    required uint8  sound_level_min = 1;
    required uint8  sound_level_max = 2;
    required uint8  sound_level_avg = 3;
    required uint16 nh3_ppm = 4;
    required uint16 h2s_ppm = 5;
    required uint32 co2_ppm = 6;
    required uint16 ch4_ppm = 7;
  }
    
  message payloadN5 {
    required NodeInfos int = 1;
    required DataN5 ext = 2;
  }
#+end_src protobuf

** N6 specific data
   N6 nodes measure values related to wind:
   - speed
   - direction
#+begin_src protobuf
  message DataN6 {
    required uint16 indoor_wind_speed_min = 1;
    required uint16 indoor_wind_speed_max = 2;
    required uint16 indoor_wind_speed = 3;
    required uint16 indoor_wind_direction= 4;
  }

  message PayloadN6 {
    required NodeInfos int = 1;
    required DataN6 ext = 2;
  }
#+end_src protobuf

** N7 specific data
   N7 only sends one type of data:
   - status of a dry contact (open closed)
#+begin_src protobuf
  enum State {
    OPEN   = 0;
    CLOSED = 1;
  }

  message DataN7 {
    required State dry_contact = 1;
  }

  message PayloadN7 {
    required NodeInfos int = 1;
    required DataN7 ext = 2;
  }
#+end_src protobuf

** N8 specific data
   N8 looks like an N7 packet, there may be the possibility to implement both as an unique packet, only distinguished by the node type in the header
#+begin_src protobuf
  message DataN8 {
    required State rele = 1;
  }

  message PayloadN8 {
    required NodeInfos int = 1;
    required DataN8 ext = 2;
  }
#+end_src protobuf

** N9 specific data
   N9 packets are used to represent the gateway status:
   - power supply status
   - network status and overall weather conditions
#+begin_src protobuf
  enum Network {
    // still no definition for Network enum values
  }

  message StatusGateway {
    required uint16 battery_voltage = 1;
    required uint16 battery_current = 2;
    required uint16 solar_voltage = 3;
    required uint16 solar_current = 4;
    required Network network_type = 5;
    required uint8  signal_strength = 6;
    required double latitude = 7;
    required double longitude = 8;
  }

  message DataN9 {
    required sint16 case_temperature = 1;
    required uint16 case_humidity = 2;
    required sint16 outdoor_temperature = 3;
    required uint16 outdoor_humidity = 4;
    required uint16 outdoor_wind_speed_min = 5;
    required uint16 outdoor_wind_speed_max = 6;
    required uint16 outdoor_wind_speed = 7;
    required uint16 outdoor_wind_direction = 8;
    required uint16 outdoor_rainfall = 9;
  }
    
  message PayloadN9 {
    required StatusGateway = 1;
    required DataN9 = 2;
  } 
#+end_src protobuf

** N10 specific data
   N10 node sends additional data about environment
#+begin_src protobuf
  message PayloadN10 {
    required double latitude = 1;
    required double longitude = 2;
    required sint16 case_temperature = 3;
    required uint16 case_humidity = 4;
    repeated uint8  indoor_insects_count_packed = 5;
  }
#+end_src protobuf
